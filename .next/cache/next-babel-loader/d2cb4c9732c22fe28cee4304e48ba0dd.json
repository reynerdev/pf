{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Learning\\\\Template\\\\themeforest-lPV3MqEJ-reton-react-personal-portfolio-resume\\\\nextjs\\\\nextjs\\\\reton\\\\components\\\\CaseStudy\\\\ContactForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nconst MySwal = withReactContent(Swal);\nimport baseUrl from '../../utils/baseUrl';\n\nconst alertContent = () => {\n  MySwal.fire({\n    title: 'Congratulations!',\n    text: 'Your message was successfully send and will back to you soon',\n    icon: 'success',\n    timer: 2000,\n    timerProgressBar: true,\n    showConfirmButton: false\n  });\n}; // Form initial state\n\n\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  number: \"\",\n  subject: \"\",\n  text: \"\"\n};\n\nconst ContactForm = () => {\n  const {\n    0: contact,\n    1: setContact\n  } = useState(INITIAL_STATE);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setContact(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      [name]: value\n    }));\n    console.log(contact);\n  };\n\n  const onSubmit = async e => {\n    // e.preventDefault();\n    try {\n      const url = `${baseUrl}/api/contact`;\n      const {\n        name,\n        email,\n        number,\n        subject,\n        text\n      } = contact;\n      const payload = {\n        name,\n        email,\n        number,\n        subject,\n        text\n      };\n      await axios.post(url, payload);\n      console.log(url);\n      setContact(INITIAL_STATE);\n      alertContent();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"contactForm\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            className: \"form-control\",\n            placeholder: \"Name\",\n            value: contact.name,\n            onChange: handleChange,\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            style: {\n              display: 'block'\n            },\n            children: errors.name && 'Name is required.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            className: \"form-control\",\n            placeholder: \"Email\",\n            value: contact.email,\n            onChange: handleChange,\n            ref: register({\n              required: true,\n              pattern: /^\\S+@\\S+$/i\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            style: {\n              display: 'block'\n            },\n            children: errors.email && 'Email is required.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"subject\",\n            className: \"form-control\",\n            placeholder: \"Subject\",\n            value: contact.subject,\n            onChange: handleChange,\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            style: {\n              display: 'block'\n            },\n            children: errors.subject && 'Subject is required.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"number\",\n            className: \"form-control\",\n            placeholder: \"Phone\",\n            value: contact.number,\n            onChange: handleChange,\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            style: {\n              display: 'block'\n            },\n            children: errors.number && 'Number is required.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"text\",\n            className: \"form-control\",\n            cols: \"30\",\n            rows: \"6\",\n            placeholder: \"Write message\",\n            value: contact.text,\n            onChange: handleChange,\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            style: {\n              display: 'block'\n            },\n            children: errors.text && 'Text body is required.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn common-btn\",\n      children: [\"Send Message \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 75\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["E:/Learning/Template/themeforest-lPV3MqEJ-reton-react-personal-portfolio-resume/nextjs/nextjs/reton/components/CaseStudy/ContactForm.js"],"names":["React","useState","useForm","axios","Swal","withReactContent","MySwal","baseUrl","alertContent","fire","title","text","icon","timer","timerProgressBar","showConfirmButton","INITIAL_STATE","name","email","number","subject","ContactForm","contact","setContact","register","handleSubmit","errors","handleChange","e","value","target","prevState","console","log","onSubmit","url","payload","post","error","required","display","pattern"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nimport baseUrl from '../../utils/baseUrl'; \r\n\r\nconst alertContent = () => {\r\n    MySwal.fire({\r\n        title: 'Congratulations!',\r\n        text: 'Your message was successfully send and will back to you soon',\r\n        icon: 'success',\r\n        timer: 2000,\r\n        timerProgressBar: true,\r\n        showConfirmButton: false,\r\n    })\r\n}\r\n\r\n// Form initial state\r\nconst INITIAL_STATE = {\r\n    name: \"\",\r\n    email: \"\",\r\n    number: \"\",\r\n    subject: \"\",\r\n    text: \"\"\r\n};\r\n\r\nconst ContactForm = () => {\r\n\r\n    const [contact, setContact] = useState(INITIAL_STATE);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setContact(prevState => ({ ...prevState, [name]: value }));\r\n        console.log(contact)\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        // e.preventDefault();\r\n        try {\r\n            const url = `${baseUrl}/api/contact`;\r\n            const { name, email, number, subject, text } = contact;\r\n            const payload = { name, email, number, subject, text };\r\n            await axios.post(url, payload);\r\n            console.log(url);\r\n            setContact(INITIAL_STATE);\r\n            alertContent();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form id=\"contactForm\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-6\">\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"name\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Name\" \r\n                            value={contact.name}\r\n                            onChange={handleChange}\r\n                            ref={register({ required: true })}\r\n                        />\r\n                        <div className='invalid-feedback' style={{display: 'block'}}>\r\n                            {errors.name && 'Name is required.'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-6\">\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"email\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Email\" \r\n                            value={contact.email}\r\n                            onChange={handleChange}\r\n                            ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\r\n                        />\r\n                        <div className='invalid-feedback' style={{display: 'block'}}>\r\n                            {errors.email && 'Email is required.'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-6\">\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"subject\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Subject\" \r\n                            value={contact.subject}\r\n                            onChange={handleChange}\r\n                            ref={register({ required: true })}\r\n                        />\r\n                        <div className='invalid-feedback' style={{display: 'block'}}>\r\n                            {errors.subject && 'Subject is required.'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-6\">\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"number\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Phone\" \r\n                            value={contact.number}\r\n                            onChange={handleChange}\r\n                            ref={register({ required: true })}\r\n                        />\r\n                        <div className='invalid-feedback' style={{display: 'block'}}>\r\n                            {errors.number && 'Number is required.'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                            name=\"text\" \r\n                            className=\"form-control\" \r\n                            cols=\"30\" \r\n                            rows=\"6\" \r\n                            placeholder=\"Write message\" \r\n                            value={contact.text}\r\n                            onChange={handleChange}\r\n                            ref={register({ required: true })}\r\n                        />\r\n                        <div className='invalid-feedback' style={{display: 'block'}}>\r\n                            {errors.text && 'Text body is required.'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n            <button type=\"submit\" className=\"btn common-btn\">Send Message <span></span></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}